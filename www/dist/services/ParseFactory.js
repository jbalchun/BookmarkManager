var app=angular.module("MyApp.ParseFactory",[]);app.factory("ParseFactory",["$rootScope",function(e){return{register:function(r){console.log("registering",r);var n=new Parse.User;n.set("username",r.email),n.set("password",r.password),n.set("email",r.email),n.signUp(null,{success:function(n){e.$broadcast("logged-in"),e.email=r.email,e.$storage.username=r.email,e.username=r.email},error:function(e,r){console.log(r),125==r.code&&alert("Error, invalid email address"),202==r.code?alert("Error, username is taken! Already an account w/ this email"):alert("Error signing up, make sure email is valid")}})},logIn:function(r){e.username=r.email,e.email=r.email,console.log("logging in"),Parse.User.logIn(r.email,r.password,{success:function(n){e.$broadcast("logged-in"),e.$storage.username=r.email},error:function(e,r){return console.log(r),alert("Error: No connection or invalid username/password"),!1}})},saveNew:function(r){var n=JSON.stringify(r),o=Parse.Object.extend("Backup"),s=new o;console.log("backing up",e.username),s.set("username",e.username),s.set("file",n),e.username.length>0&&s.save(null,{success:function(e){console.log("save success")},error:function(e,r){console.log("save err",r)}})},deleteThenSave:function(r){var n=this,o=new Parse.Query("Backup");console.log("deleting"),o.equalTo("username",e.username),o.find({success:function(e){for(var o=0;o<e.length;o++)e[o].destroy({});n.saveNew(r)},error:function(e){console.log("delete err",e)}})},loadFrom:function(e,r){var n=new Parse.Query("Backup");console.log("queryname",e),n.equalTo("username",e),n.find({success:function(e){e[0]&&(console.log("result",e[0].get("file")),console.log("parse",JSON.parse(e[0].get("file"))),r.setModel(JSON.parse(e[0].get("file"))))},error:function(e){}})}}}]);